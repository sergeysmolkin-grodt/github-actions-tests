name: Production_deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: DB MySQL8 Setup
        run: |
          echo -e "Enable LOAD DATA LOCAL INFILE in my.cnf\n"
          echo -e "SETTING secure-file-priv TO EMPTY STRING\n"
          echo -e "[mysqld]\nsecure-file-priv=''" | sudo tee -a /etc/mysql/my.cnf
          echo -e "SETTING local_infile TO ON\n"
          echo -e "[mysqld]\nlocal_infile='ON'" | sudo tee -a /etc/mysql/my.cnf
          echo -e "Start MYSQL service, it is off by default\n"
          sudo systemctl enable mysql.service
          sudo systemctl start mysql.service
          echo -e "Creating Laravel Database\n"
          mysql --host localhost:3306 -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS laravel;'
          echo -e "Check new settings\n"
          mysql --host localhost:3306 -uroot -proot -e "SELECT @@global.secure_file_priv, @@global.local_infile"
        working-directory: .


      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy .env
        run: cp .env.example .env

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Dependencies
        uses: php-actions/composer@v6
        with:
          args: --ignore-platform-req=ext-gd
                --ignore-platform-req=ext-zip

      - name: Generate app key
        run: php artisan key:generate

      - name: Run migrations and seeders
        run: docker exec app_new php artisan migrate:fresh --seed --force

      - name: Execute PHPUnit Tests
        uses: php-actions/phpunit@v3
        with:
          version: 9.6
          php_version: 8.1
          bootstrap: vendor/autoload.php
          configuration: phpunit.xml
          args: --coverage-text

      - name : Additional runner
        run: vendor/bin/phpunit

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test --parallel



